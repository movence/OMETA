<!--
  ~ Copyright J. Craig Venter Institute, 2013
  ~
  ~ The creation of this program was supported by J. Craig Venter Institute
  ~ and National Institute for Allergy and Infectious Diseases (NIAID),
  ~ Contract number HHSN272200900007C.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project name="ometa" default="dist" basedir="." >
    <description>
        Builds the Hibernate/Database Distributable(s) for O-META to Load the Project Events Database.
    </description>

    <!-- Add ant-contrib jar file to properties/additional classpath -->
    <taskdef resource="net/sf/antcontrib/antlib.xml"/>

    <property name="tracking.web.context" value="ometa"/>
    <property name="package.name" value="org/jcvi/${tracking.web.context}" />
    <property name="min.js.name" value="ometa.min.js" />
    <property name="js.name" value="ometa.js" />

    <!--jboss location from user build file -->
    <property file="./user_build_properties/${user.name}-build.properties" />
    <property name="jboss.deploy.local.dir" value="${jboss.local.server}/deploy"/>
    <property name="compile.target" value="1.7" />

    <!-- set global properties for this build -->
    <property name="base.dir" value="${basedir}/.."/>
    <property name="src.dir" value="${base.dir}/main/src/java"/>
    <property name="tmp.dir" value="${base.dir}/tmp"/>
    <property name="build.dir" value="${base.dir}/build"/>
    <property name="class.dir" value="${tmp.dir}/classes"/>
    <property name="dist.dir" value="${base.dir}/dist"/>
    <property name="ear.lib.dir" value="${dist.dir}/lib"/>
    <property name="web.dir" value="${base.dir}/main/src/www"/>
    <property name="hibernate.dir" value="${base.dir}/build/hibernate"/>

    <property name="src.js.dir" value="${web.dir}/scripts" description="JS source folder"/>
    <property name="src.js.page.dir" value="${web.dir}/scripts/page" description="JS source folder"/>

    <!-- JS File list to be minimized individually (inside scripts/page folder) -->
    <property name="js.file.list" value="event.detail.js,event.loader.js,metadata.setup.js"/>

    <!-- JS File list to be minimized in a single file (inside scripts folder) -->
    <property name="js.single.file.list" value="ometa.utils.js,bootstrap.js"/>

    <!-- LIBRARY -->
    <property name="common.util.dir" value="${base.dir}/common/CommonUtils/" />
    <property name="thirdparty.lib.dir" value="${base.dir}/common/thirdparty" />
    <property name="JBoss-Client.lib.dir" value="${thirdparty.lib.dir}/wildfly-module-jars" />
    <property name="dom4j.lib.dir" value="${thirdparty.lib.dir}/Dom4J-1.6.1/"/>
    <property name="hibernate.lib.dir" value="${thirdparty.lib.dir}/Hibernate-5.0.7/"/>
    <property name="mysql.lib.dir" value="${thirdparty.lib.dir}/MySQL-5.1.14"/>
    <property name="displaytag.lib.dir" value="${thirdparty.lib.dir}/displaytag-1.2"/>
    <property name="apachepoi.lib.dir" value="${thirdparty.lib.dir}/ApachePOI"/>
    <property name="ebi.lib.dir" value="${thirdparty.lib.dir}/ebi"/>
    <property name="struts.lib.dir" value="${thirdparty.lib.dir}/Struts-2.5.2/"/>
    <property name="servlet.lib.dir" value="${thirdparty.lib.dir}/Servlet-2.4/"/>
    <property name="ehcache.lib.dir" value="${thirdparty.lib.dir}/ehcache-2.3.1/"/>
    <property name="ldap.lib.dir" value="${thirdparty.lib.dir}/ldap"/>
    <property name="zip.lib.dir" value="${thirdparty.lib.dir}/zip4j"/>
    <property name="yuicompressor.lib.dir" value="${thirdparty.lib.dir}/yuicompressor" description="YUICompressor" />

    <property name="war-tmp-dir" value="${dist.dir}/tmp-war"/>
    <property name="pre-exploded-war" value="${dist.dir}/${tracking.web.context}-pre-exploded.war"/>
    <property name="exploded-war" value="${war-tmp-dir}/${tracking.web.context}.war"/>
    <property name="persistence-ar" value="${dist.dir}/${tracking.web.context}_db_interface.jar"/>
    <property name="yuicompressor-jar" value="${yuicompressor.lib.dir}/yuicompressor-2.4.7.jar"/>

    <!-- Files names for distribution -->
    <property name="js" value="${src.js.dir}/${js.name}" />
    <property name="js.min" value="${src.js.dir}/${min.js.name}" />

    <!-- Combines given JS files in ometa.js and ometa.min.js -->
    <target name="js" description="Concatenate JavaScript source files">
        <echo message="Building ${js}" />
        <concat destfile="${js}">
            <filelist dir="${src.js.dir}" files="${js.single.file.list}"/>
        </concat>
        <echo message="${js} built." />
    </target>

    <target name="js.min" depends="js" description="Minimize JavaScript files">
        <echo message="Building ${js.min}" />
        <apply executable="java" parallel="false" verbose="true" dest="${src.js.dir}">
            <fileset dir="${src.js.dir}">
                <include name="${js.name}" />
            </fileset>
            <arg line="-jar" />
            <arg path="${yuicompressor-jar}" />
            <arg value="--charset" />
            <arg value="ANSI" />
            <arg value="-o" />
            <targetfile />
            <mapper type="glob" from="${js.name}" to="${min.js.name}" />
        </apply>
        <for param="file" list="${js.file.list}">
            <sequential>
                <propertyregex property="file.min" input="@{file}" regexp=".js" replace=".min.js" override="true"/>
                <apply executable="java" parallel="false" verbose="true" dest="${src.js.page.dir}">
                    <fileset dir="${src.js.page.dir}">
                        <include name="@{file}" />
                    </fileset>
                    <arg line="-jar" />
                    <arg path="${yuicompressor-jar}" />
                    <arg value="--charset" />
                    <arg value="ANSI" />
                    <arg value="-o" />
                    <targetfile />
                    <mapper type="glob" from="@{file}" to="${file.min}" />
                </apply>
            </sequential>
        </for>
        <echo message="${js.min} built." />
    </target>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <mkdir dir="${tmp.dir}"/>
        <mkdir dir="${class.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${ear.lib.dir}"/>
        <mkdir dir="${class.dir}/resource" />
        <mkdir dir="${class.dir}/resource/internal" />
        <copy todir="${class.dir}/resource">
            <fileset dir="${build.dir}/resource/">
                <include name="LoadingEngine*.properties"/>
                <include name="gen_*.sql"/>
            </fileset>
        </copy>
        <copy file="${web.dir}/WEB-INF/struts.xml" todir="${class.dir}"/>
        <copy file="${build.dir}/log4j2.xml" todir="${class.dir}"/>
    </target>

    <path id="common-classpath">
        <fileset dir="${common.util.dir}" includes="Common-Utils.jar"/>
        <fileset dir="${hibernate.lib.dir}" includes="*.jar"/>
        <fileset dir="${JBoss-Client.lib.dir}" includes="*.jar"/>
        <fileset dir="${struts.lib.dir}" includes="*.jar"/>
        <fileset dir="${servlet.lib.dir}" includes="*.jar"/>
        <fileset dir="${apachepoi.lib.dir}" includes="*.jar"/>
        <fileset dir="${ebi.lib.dir}" includes="*.jar"/>
        <fileset dir="${ldap.lib.dir}" includes="*.jar"/>
        <fileset dir="${zip.lib.dir}" includes="*.jar"/>
    </path>

    <target name="compile" depends="init" description="compile the source">
        <javac  target="${compile.target}"
                srcdir="${src.dir}"
                classpathref="common-classpath"
                destdir="${class.dir}"
                debug="true"
                debuglevel="lines,vars,source"/>
    </target>

    <target name="make-har" depends="compile" description="make hibernate archive">
        <jar destfile="${persistence-ar}">
            <fileset dir="${tmp.dir}/classes">
                <include name="${package.name}/hibernate/dao/*.class" />
                <include name="${package.name}/model/*.class" />
            </fileset>
            <fileset dir="${base.dir}/build">
                <include name="META-INF/persistence.xml" />
            </fileset>
            <zipgroupfileset dir="${ehcache.lib.dir}" includes="*.jar" />
            <zipgroupfileset dir="${mysql.lib.dir}" includes="*.jar"/>
            <zipgroupfileset dir="${JBoss-Client.lib.dir}" includes="antlr.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/ehcache-2.3.1" includes="**/*.jar"/>
        </jar>
    </target>

    <target name="make-loader-app" depends="compile,make-har" description="Create a file-loader application jar.">
        <!-- create the jar file -->
        <jar destfile="${dist.dir}/${tracking.web.context}App.jar">
            <fileset dir="${tmp.dir}/classes">
                <include name="**/*.class" />
                <include name="**/*.xml" />
                <include name="**/*.sql" />
                <exclude name="${package.name}/production_etl/**/*.class" />
                <exclude name="${package.name}/action/**/*.class" />
                <exclude name="${package.name}/interceptor/**/*.class" />
                <exclude name="${package.name}/stateless_session_bean/**/*.class" />
            </fileset>
            <fileset dir="${build.dir}/resource/">
                <include name="LoadingEngine*.properties"/>
            </fileset>
            <fileset dir="${build.dir}/hibernate" includes="standalone_*_hibernate.cfg.xml"/>
            <fileset file="${persistence-ar}"/>
            <zipgroupfileset dir="${dom4j.lib.dir}" includes="*.jar"/>
            <zipgroupfileset dir="${hibernate.lib.dir}" includes="*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/wildfly-module-jars" includes="**/hibernate-commons-annotations-5.0.1.Final.jar"/>
            <zipgroupfileset dir="${common.util.dir}" includes="**/*.jar"/>
            <zipgroupfileset dir="${mysql.lib.dir}" includes="**/*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/jta-1_1" includes="**/*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/ehcache-2.3.1" includes="**/*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/Struts-2.5.2" includes="**/commons-collections-3.2.2.jar"/>
            <!--<zipgroupfileset dir="${JBoss-Client.lib.dir}" includes="*.jar"
                             excludes="activation.jar, avalon-framework.jar, FastInfoset.jar, getopt.jar, jacorb.jar, jaxb*.jar, jaxws.jar"/>
           --> <zipgroupfileset dir="${base.dir}/common/thirdparty/Servlet-2.4" includes="javax.servlet.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/Struts-2.5.2" includes="**/*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/zip4j" includes="**/*.jar"/>
        </jar>
    </target>

    <target name="make-etl-app" depends="compile,make-har" description="Create an Extract/Translate/Load Jar File">
        <jar destfile="${dist.dir}/${tracking.web.context}ETL.jar">
            <fileset dir="${tmp.dir}/classes">
                <include name="**/*.class" />
                <include name="**/*.properties" />
                <include name="**/*.xml" />
                <include name="**/*.sql" />
                <exclude name="${package.name}/action/**/*.class" />
                <exclude name="${package.name}/engine/**/*.class" />
                <exclude name="${package.name}/interceptor/**/*.class" />
                <exclude name="${package.name}/stateless_session_bean/**/*.class" />
                <exclude name="${package.name}/web_bean/**/*.class" />
                <exclude name="${package.name}/jndi/**/*.class" />
            </fileset>
            <fileset dir="${build.dir}/hibernate" includes="standalone_*_hibernate.cfg.xml"/>
            <fileset dir="${build.dir}" file="log4j2.xml"/>
            <fileset file="${persistence-ar}"/>
            <zipgroupfileset dir="${dom4j.lib.dir}" includes="*.jar"/>
            <zipgroupfileset dir="${hibernate.lib.dir}" includes="*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/wildfly-module-jars" includes="**/hibernate-commons-annotations-5.0.1.Final.jar"/>
            <zipgroupfileset dir="${common.util.dir}" includes="**/*.jar"/>
            <zipgroupfileset dir="${mysql.lib.dir}" includes="**/*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/jta-1_1" includes="**/*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/ehcache-2.3.1" includes="**/*.jar"/>
            <zipgroupfileset dir="${base.dir}/common/thirdparty/Struts-2.5.2" includes="**/commons-collections-3.2.2.jar"/>
            <zipgroupfileset dir="${JBoss-Client.lib.dir}" includes="mail.jar" />
            <zipgroupfileset dir="${JBoss-Client.lib.dir}" includes="activation.jar"/>
            <zipgroupfileset dir="${JBoss-Client.lib.dir}" includes="log4j.jar"/>
        </jar>
    </target>

    <target name="war" depends="make-har">
        <war warfile="${pre-exploded-war}" webxml="${web.dir}/WEB-INF/web.xml" >
            <classes dir="${class.dir}">
                <include name="**/*.class"/>
                <include name="**/*.xml"/>
                <exclude name="**/*.properties"/>
                <exclude name="**/log4j.xml"/>
                <exclude name="${package.name}/hibernate/**/*.class" />
                <exclude name="${package.name}/model/*.class" />
                <exclude name="${package.name}/bean_interface/**/*.class" />
                <exclude name="${package.name}/stateless_session_bean/**/*.class" />
                <exclude name="${package.name}/configuration/*.class" />
                <exclude name="${package.name}/engine/**/*.class" />
                <exclude name="**/*.hbm.xml" />
                <exclude name="**/service-hibernate.xml" />
            </classes>
            <fileset dir="${web.dir}">
                <include name="**/*.jsp"/>
                <include name="**/*.js"/>
                <include name="**/*.css"/>
                <include name="**/*.jpg"/>
                <include name="**/*.gif"/>
                <include name="**/*.png"/>
                <include name="**/*.xml"/>
                <include name="**/*.swf"/>
                <include name="**/*.html"/>
                <include name="**/*.ttf"/>
                <include name="**/*.woff"/>
                <exclude name="**/struts.xml" />
                <exclude name="**/log4j2.xml" />
            </fileset>
            <lib dir="${struts.lib.dir}" includes="*.jar"/>
            <lib dir="${ldap.lib.dir}" includes="*.jar"/>
            <lib dir="${displaytag.lib.dir}" includes="*.jar"/>
            <lib dir="${common.util.dir}" includes="**/*.jar"/>
            <lib dir="${apachepoi.lib.dir}" includes="**/*.jar"/>
            <lib dir="${ebi.lib.dir}" includes="**/*.jar"/>
            <lib dir="${dom4j.lib.dir}" includes="**/*.jar"/>
            <lib dir="${JBoss-Client.lib.dir}" includes="**/artemis-core-client-1.1.0.wildfly-011.jar" />
            <lib dir="${JBoss-Client.lib.dir}" includes="**/jboss-remoting-4.0.18.Final.jar" />
            <lib dir="${JBoss-Client.lib.dir}" includes="**/jboss-ejb3-core-client.jar" />
            <lib dir="${JBoss-Client.lib.dir}" includes="**/jettison-1.3.3.jar" />
            <zipfileset dir="${base.dir}/build/META-INF" includes="context.xml" prefix="META-INF"/>
        </war>
        <mkdir dir="${war-tmp-dir}" />
        <mkdir dir="${exploded-war}" />
        <unjar dest="${exploded-war}" src="${pre-exploded-war}" />
        <delete file="${pre-exploded-war}" />
    </target>

    <target name="server-jar" depends="compile">
        <jar destfile="${dist.dir}/${tracking.web.context}_ejb_server.jar">
            <fileset dir="${tmp.dir}/classes">
                <include name="${package.name}/**/*.class" />
                <exclude name="${package.name}/hibernate/**/*.class" />
                <exclude name="${package.name}/action/**/*.class" />
                <exclude name="${package.name}/model/**/*.class" />
            </fileset>
        </jar>
    </target>

    <target name="resource-jar" depends="compile">
        <jar destfile="${ear.lib.dir}/resource.jar">
            <fileset dir="${build.dir}/resource/">
                <include name="LoadingEngine*.properties"/>
            </fileset>
        </jar>
    </target>

    <target name="ear" depends="compile,server-jar,war,make-har" description="All targets to make the enterprise application." >
        <ear earfile="${dist.dir}/${tracking.web.context}.ear" appxml="${build.dir}/META-INF/application.xml" >
            <metainf dir="${build.dir}/META-INF">
                <include name="jboss.xml" />
                <!--<include name="scheduler-service.xml" />-->
            </metainf>
            <fileset dir="${dist.dir}">
                <include name="${tracking.web.context}_ejb_server.jar" />
                <include name="${tracking.web.context}_db_interface.jar" />
            </fileset>
            <fileset dir="${war-tmp-dir}" >
                <include name="**/*" />
            </fileset>
            <fileset dir="${common.util.dir}" includes="Common-Utils.jar"/>
            <fileset dir="${apachepoi.lib.dir}" includes="**/*.jar"/>
            <fileset dir="${build.dir}">
                <include name="**/*.properties" />
                <exclude name="**/LoadingEngine*.properties" />
                <exclude name="**/*-build.properties" />
            </fileset>
            <zipfileset dir="${ear.lib.dir}" prefix="lib">
                <include name="resource.jar"/>
            </zipfileset>
        </ear>
    </target>

    <target name="dist" depends="clean,make-loader-app,make-etl-app,war,resource-jar,ear" description="generate the distribution" />

    <!-- Replace <script> with min version
        Minimized JS files (single file) should be included between "JS to be replaced by min version" and "end" comment
     -->
    <target name="replace-min">
        <replaceregexp match="\&lt;!--JS to be replaced by min version--\&gt;(.*?)\&lt;!--end--\&gt;"
                       replace="\&lt;script src='scripts/${min.js.name}'\&gt;\&lt;/script\&gt;" flags="gs">
            <fileset dir="${war-tmp-dir}/${tracking.web.context}.war/JSP" >
                <filename name="header.jsp"/>
            </fileset>
        </replaceregexp>
        <for param="file" list="${js.file.list}">
            <sequential>
                <propertyregex property="file.min" input="@{file}" regexp=".js" replace=".min.js" override="true"/>
                <replaceregexp match="@{file}" replace="${file.min}" flags="gs">
                    <fileset dir="${war-tmp-dir}/${tracking.web.context}.war/JSP" >
                        <filename name="**.jsp"/>
                    </fileset>
                </replaceregexp>
            </sequential>
        </for>
    </target>

    <target name="dist-min" depends="clean,js,js.min,make-loader-app,make-etl-app,war,replace-min,ear" description="generate the distribution" />

    <target name="ear-to-jboss" depends="stopjboss,dist"  description="export to jboss">
        <unzip src="${dist.dir}/${tracking.web.context}.ear" dest="${jboss.deploy.local.dir}/${tracking.web.context}.ear/" />
        <antcall target="startjboss" />
    </target>

    <target name="clean-classes" description="clean up" >
        <delete dir="${tmp.dir}"/>
    </target>

    <target name="clean" description="clean up" depends="clean-classes" >
        <delete dir="${dist.dir}" />
    </target>

    <target name="stopjboss" description="stop jboss process">
        <exec executable="/bin/bash"><arg value="${jboss.local.home}/jboss_ometa"/><arg value="stop"/></exec>
    </target>
    <target name="startjboss" description="start jboss process">
        <exec executable="/bin/bash"><arg value="${jboss.local.home}/jboss_ometa"/><arg value="start"/></exec>
    </target>
</project>